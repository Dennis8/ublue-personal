# image will be published to ghcr.io/<user>/<name>
name: ublue-personal
# description will be included in the image's metadata
description: My personal customization of uBlue images. Make your own! https://ublue.it/making-your-own/

# the base image to build on top of (FROM) and the version tag to use
base-image: ghcr.io/ublue-os/silverblue-nvidia
image-version: latest # 38, latest is also supported if you want new updates ASAP

# module configuration, executed in order
# you can include multiple instances of the same module
modules:
  # Files: https://github.com/ublue-os/bling/tree/main/modules/files
  - type: files
    files:
      - usr: /usr # copies config/files/usr into your image's /usr
                  #
                  # configuration you wish to end up in /etc/ on the booted system
                  # should be added into /usr/etc/ as that is the proper "distro"
                  # config directory on ostree. Read more in the files module's README

  # rpm-ostree: https://github.com/ublue-os/bling/tree/main/modules/rpm-ostree
  - type: rpm-ostree
    repos:
      - https://copr.fedorainfracloud.org/coprs/atim/starship/repo/fedora-%OS_VERSION%/atim-starship-fedora-%OS_VERSION%.repo
    install:
      # System apps
      - langpacks-nl # Dutch language packs (systemwide)
      - langpacks-en_GB # British language packs (systemwide)
      # Gnome apps
      - gnome-shell-extension-gsconnect # GS connect for KDE connect
      # - webextension-gsconnect
      - nautilus-gsconnect
      # Shells
      - starship
      - zsh
      - zsh-autosuggestions
      - zsh-syntax-highlighting
      # Shell tools
      - neofetch # sysinfo
      - micro # text editor
      - fzf # fuzzy file search
      - trash-cli # manages remove to trash
      - lm_sensors # check temperatures
      # Container tools
      - podman-compose # docker-compose alternative
      - podman-plugins
      - podman-tui
      - podmansh
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
      - docker-compose
    remove:
      - firefox # default firefox removed in favor of flatpak
      - firefox-langpacks # langpacks needs to also be removed to prevent dependency problems

  # Fonts: https://github.com/ublue-os/bling/tree/main/modules/fonts
  - type: fonts
    fonts:
      nerd-fonts:
        - FiraCode # don't add "Nerd Font" suffix.
        - Hack
        - SourceCodePro
        - Terminus
        - JetBrainsMono
        - NerdFontsSymbolsOnly
      google-fonts:
        - Roboto
        - Open Sans
  
  # Bling: https://github.com/ublue-os/bling/tree/main/modules/bling
  - type: bling # configure what to pull in from ublue-os/bling
    install:
      - justfiles # add "!include /usr/share/ublue-os/just/bling.just"
                  # in your custom.just (added by default) or local justfile
      # - nix-installer # shell shortcuts for determinate system's nix installers
      - ublue-os-wallpapers
      - ublue-update # https://github.com/ublue-os/ublue-update
      - dconf-update-service # a service unit that updates the dconf db on boot
      # Broken, see: https://github.com/ublue-os/bling/issues/70
      # - devpod # https://devpod.sh/ as an rpm
      # https://loft.sh/blog/devpod-release-community-providers/
      # - gnome-vrr # enables gnome-vrr for your image 
      - container-tools # installs container-related tools onto /usr/bin: kind, kubectx, docker-compose and kubens 
      - laptop # installs TLP and configures your system for laptop usage

  - type: yafti # if included, yafti and it's dependencies (pip & libadwaita)
                #  will be installed and set up
    custom-flatpaks: # this section is optional
      # - Celluloid: io.github.celluloid_player.Celluloid
      # - Krita: org.kde.krita

  - type: script
    scripts:
      - install-chezmoi.sh
      - install-ms-fonts.sh
      # - install-mullvad-vpn.sh
      # - install-vscode.sh
      - install-appimagelauncher.sh
      - download-fonts.sh
      - zshplugins.sh
      - clean-repos.sh
      # this sets up the proper policy & signing files for signed images to work
      - signing.sh
